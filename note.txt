settings part
- created settings folder
- moved settings.py to settings as base
- create local.py, production.py
- change manage.py. If settings.DEBUG => local else(false) => production
- sqlite db for local

secret key
    activate python shell
    google django github

    from django.core.management.utils import get_random_secret_key
    print(get_random_secret_key())
    paste in settings.base

virtual environment variables
    python-dotenv
    create .env file in base project dir
    transfer secret key

    from dotenv import load_dotenv
    import os
    load_dotenv()

    BASE_DIR = Path(__file__).resolve().parent.parent

    SECRET_KEY = os.environ.get("SECRET_KEY")

testing: pytest
pip install pytest
create pytest.ini in the folder with manage.py
    # config file which supports key value pairs
    [pytest]
    DJANGO_SETTINGS_MODULE = ecommerce.settings.local
    python_files = test_*.py

create tests folder
pip install pytest-django

pip install black - formatter

pip freeze > requirements.txt

PYTHON FORMATTER - USER settings
PEP 8

pip install flake8 - linting

branched github

created product app in tests directory
create product folder in tests

django mptt - deeply nested models
pip install django-mptt

drf-spectacular and swagger util
pip install drf-spectacular

manage.py spectacular --file schema.yml

pip install coverage
    coverage covers the tests in an api showing statements, missing tests, excluded, and coverage%

    coverage run -m pytest
    coverage html

pip install pytest-cov
pytest --cov

testing
    unit testing - "deleting all other codes to test only a single unit of codes" 
        - models
        - url configs
        - view/viewsets
        - serializer

    end to end testing - testing the behavioural flow of the codes/program
        - api endpoints

    product testing

    3 stages for building test
    1. Arrange
    2. Act
    3. Assert

pip install pytest-factoryboy
    factory for unit testing

api_client for end-to-end testing
    from rest_framework.test import APIClient
